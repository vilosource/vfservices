# Test Result Analyzer Container
FROM node:18-alpine

# Install system dependencies
RUN apk add --no-cache \
    jq \
    python3 \
    py3-pip \
    bash \
    curl

# Set working directory
WORKDIR /analyzer

# Copy analyzer package files
COPY analyzer/package*.json ./

# Install Node.js dependencies (use npm install since we don't have package-lock.json)
RUN npm install --only=production

# Install Python analysis libraries (with break-system-packages for Alpine)
RUN pip3 install --break-system-packages --no-cache-dir \
    pandas \
    matplotlib \
    seaborn \
    numpy \
    jinja2

# Copy analyzer scripts
COPY analyzer/ ./

# Create directories for analysis output
RUN mkdir -p /test-results /test-reports /analysis-output

# Environment variables
ENV NODE_ENV=production
ENV PYTHONPATH=/analyzer
ENV ANALYSIS_OUTPUT_DIR=/analysis-output

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=2 \
  CMD node --version || exit 1

# Default command
CMD ["node", "analyze-results.js"]