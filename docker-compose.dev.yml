services:
  traefik:
    image: traefik:v3.4
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.file.directory=/etc/traefik/dynamic
      - --providers.file.watch=true
      - --entryPoints.web.address=:80
      - --entryPoints.websecure.address=:443
      - --entryPoints.web.http.redirections.entryPoint.to=websecure
      - --entryPoints.web.http.redirections.entryPoint.scheme=https
      - --accesslog=true
      - --accesslog.format=common
      - --log.level=DEBUG
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/etc/certs:ro
      - ./traefik/dynamic:/etc/traefik/dynamic:ro

  certbot:
    image: certbot/dns-cloudflare
    volumes:
      - ./certs:/etc/letsencrypt
    environment:
      - CLOUDFLARE_TOKEN=${CLOUDFLARE_API_TOKEN}
    entrypoint: /bin/sh

  postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-vfuser}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-vfpass}
      - POSTGRES_DB=${POSTGRES_DB:-vfdb}
    volumes:
      - pgdata:/var/lib/postgresql/data

  identity-provider:
    build:
      context: .
      dockerfile: identity-provider/Dockerfile
    working_dir: /code/identity-provider
    volumes:
      - ./identity-provider:/code/identity-provider 
      - ./common:/code/common
    ports:
      - "8100:8000"
    eironment:
      - PYTHONPATH=/code
      - DJANGO_ENV=development
      - DEBUG=True
      - VF_JWT_SECRET=${VF_JWT_SECRET:-change-me}
      - SSO_COOKIE_DOMAIN=.${DEV_DOMAIN:-vfservices.viloforge.com}
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=vfdb_identity
      - POSTGRES_USER=${POSTGRES_USER:-vfuser}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-vfpass}
      # Admin user configuration
      - ADMIN_USERNAME=${ADMIN_USERNAME:-admin}
      - ADMIN_EMAIL=${ADMIN_EMAIL:-admin@viloforge.com}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin123}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.identity.rule=Host(`identity.${DEV_DOMAIN:-vfservices.viloforge.com}`)"
      - "traefik.http.routers.identity.entrypoints=websecure"
      - "traefik.http.routers.identity.tls=true"
      - "traefik.http.services.identity.loadbalancer.server.port=8000"
      - "traefik.http.services.identity.loadbalancer.passHostHeader=true"

  website:
    build:
      context: .
      dockerfile: website/Dockerfile
    working_dir: /code/website
    volumes:
      - ./website:/code/website
      - ./common:/code/common
    environment:
      - PYTHONPATH=/code
      - VF_JWT_SECRET=${VF_JWT_SECRET:-change-me}
      - SSO_COOKIE_DOMAIN=.${DEV_DOMAIN:-vfservices.viloforge.com}
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=vfdb_website
      - POSTGRES_USER=${POSTGRES_USER:-vfuser}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-vfpass}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.website.rule=Host(`website.${DEV_DOMAIN:-vfservices.viloforge.com}`)"
      - "traefik.http.routers.website.entrypoints=websecure"
      - "traefik.http.routers.website.tls=true"
      - "traefik.http.services.website.loadbalancer.server.port=8000"
      - "traefik.http.services.website.loadbalancer.passHostHeader=true"

  billing-api:
    build:
      context: .
      dockerfile: billing-api/Dockerfile
    working_dir: /code/billing-api
    volumes:
      - ./billing-api:/code/billing-api
      - ./common:/code/common
    environment:
      - PYTHONPATH=/code
      - VF_JWT_SECRET=${VF_JWT_SECRET:-change-me}
      - SSO_COOKIE_DOMAIN=.${DEV_DOMAIN:-vfservices.viloforge.com}
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=vfdb_billing
      - POSTGRES_USER=${POSTGRES_USER:-vfuser}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-vfpass}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.billing.rule=Host(`billing.${DEV_DOMAIN:-vfservices.viloforge.com}`)"
      - "traefik.http.routers.billing.entrypoints=websecure"
      - "traefik.http.routers.billing.tls=true"
      - "traefik.http.services.billing.loadbalancer.server.port=8000"
      - "traefik.http.services.billing.loadbalancer.passHostHeader=true"

  inventory-api:
    build:
      context: .
      dockerfile: inventory-api/Dockerfile
    working_dir: /code/inventory-api
    volumes:
      - ./inventory-api:/code/inventory-api
      - ./common:/code/common
    environment:
      - PYTHONPATH=/code
      - VF_JWT_SECRET=${VF_JWT_SECRET:-change-me}
      - SSO_COOKIE_DOMAIN=.${DEV_DOMAIN:-vfservices.viloforge.com}
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=vfdb_inventory
      - POSTGRES_USER=${POSTGRES_USER:-vfuser}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-vfpass}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.inventory.rule=Host(`inventory.${DEV_DOMAIN:-vfservices.viloforge.com}`)"
      - "traefik.http.routers.inventory.entrypoints=websecure"
      - "traefik.http.routers.inventory.tls=true"
      - "traefik.http.services.inventory.loadbalancer.server.port=8000"
      - "traefik.http.services.inventory.loadbalancer.passHostHeader=true"

networks:
  default:
    name: vfnet

volumes:
  pgdata:
